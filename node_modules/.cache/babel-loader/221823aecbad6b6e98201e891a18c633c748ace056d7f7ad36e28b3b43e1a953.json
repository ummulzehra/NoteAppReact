{"ast":null,"code":"var _jsxFileName = \"D:\\\\HTML Projects\\\\NoteAppReact\\\\src\\\\components\\\\NoteView.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"../styles/NoteView.Module.css\";\nimport NoteHeader from \"./NoteHeader\";\nimport Input from \"./Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteView = _ref => {\n  _s();\n  let {\n    name,\n    color,\n    id,\n    isMobile,\n    display,\n    setDisplay\n  } = _ref;\n  const [notes, setNotes] = React.useState([]);\n  const [groupId, setGroupId] = React.useState(\"\");\n  const [newNote, setNewNote] = React.useState({});\n  React.useEffect(() => {\n    const noteGroups = JSON.parse(localStorage.getItem(\"noteGroups\"));\n    const groupIndex = noteGroups.findIndex(group => group.id === id);\n    if (groupIndex === -1) {\n      console.error(`Group with ID ${id} not found`);\n      return;\n    }\n    const group = noteGroups[groupIndex];\n    setGroupId(group.id);\n    setNotes([...group.notes], newNote);\n  }, [id, newNote, setNewNote]);\n  const handleNewNote = value => {\n    const now = new Date();\n    const newNote = {\n      ...value,\n      date: now.toISOString(),\n      time: `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`\n    };\n    setNewNote(newNote);\n    setNotes([...notes, newNote]);\n  };\n  const formatDateTime = dateStr => {\n    const date = new Date(dateStr);\n    if (isNaN(date.getTime())) {\n      return \"\";\n    }\n    const options = {\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric'\n    };\n    const formattedDate = new Intl.DateTimeFormat('en-GB', options).format(date);\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    const formattedTime = `${hours}:${minutes}`;\n    return `${formattedDate} • ${formattedTime}`;\n  };\n  const shareNote = note => {\n    const shareData = {\n      title: 'Note',\n      text: note.content,\n      url: window.location.href // optional, depending on your sharing method\n    };\n\n    navigator.share(shareData).catch(console.error);\n  };\n  const shareGroup = () => {\n    const notesContent = notes.map(note => note.content).join('\\n\\n');\n    const shareData = {\n      title: 'Notes Group',\n      text: notesContent,\n      url: window.location.href\n    };\n    navigator.share(shareData).catch(console.error);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note-view-container\",\n    style: {\n      display: isMobile && !display ? \"none\" : \"\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(NoteHeader, {\n      name: name,\n      color: color,\n      isMobile: isMobile,\n      display: display,\n      setDisplay: setDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shareGroup,\n      children: \"Share Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), groupId === id && notes && notes.map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-content\",\n        children: note.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-date-time\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"note-date-time\",\n            children: formatDateTime(note.date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => shareNote(note),\n          children: \"Share Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this)), notes && notes.length <= 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"example-txt\",\n      children: \"Start Writing Notes Here!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: id,\n      handleNewNote: handleNewNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteView, \"5ZuEu69aDOOlVdLCLfd6jd43KYI=\");\n_c = NoteView;\nexport default NoteView;\nvar _c;\n$RefreshReg$(_c, \"NoteView\");","map":{"version":3,"names":["React","NoteHeader","Input","jsxDEV","_jsxDEV","NoteView","_ref","_s","name","color","id","isMobile","display","setDisplay","notes","setNotes","useState","groupId","setGroupId","newNote","setNewNote","useEffect","noteGroups","JSON","parse","localStorage","getItem","groupIndex","findIndex","group","console","error","handleNewNote","value","now","Date","date","toISOString","time","getHours","toString","padStart","getMinutes","formatDateTime","dateStr","isNaN","getTime","options","day","month","year","formattedDate","Intl","DateTimeFormat","format","hours","minutes","formattedTime","shareNote","note","shareData","title","text","content","url","window","location","href","navigator","share","catch","shareGroup","notesContent","map","join","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","index","length","_c","$RefreshReg$"],"sources":["D:/HTML Projects/NoteAppReact/src/components/NoteView.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"../styles/NoteView.Module.css\";\r\nimport NoteHeader from \"./NoteHeader\";\r\nimport Input from \"./Input\";\r\n\r\nconst NoteView = ({ name, color, id, isMobile, display, setDisplay }) => {\r\n  const [notes, setNotes] = React.useState([]);\r\n  const [groupId, setGroupId] = React.useState(\"\");\r\n  const [newNote, setNewNote] = React.useState({});\r\n\r\n  React.useEffect(() => {\r\n    const noteGroups = JSON.parse(localStorage.getItem(\"noteGroups\"));\r\n    const groupIndex = noteGroups.findIndex((group) => group.id === id);\r\n    if (groupIndex === -1) {\r\n      console.error(`Group with ID ${id} not found`);\r\n      return;\r\n    }\r\n    const group = noteGroups[groupIndex];\r\n    setGroupId(group.id);\r\n    setNotes([...group.notes], newNote);\r\n  }, [id, newNote, setNewNote]);\r\n\r\n  const handleNewNote = (value) => {\r\n    const now = new Date();\r\n    const newNote = {\r\n      ...value,\r\n      date: now.toISOString(), \r\n      time: `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`\r\n    };\r\n    setNewNote(newNote);\r\n    setNotes([...notes, newNote]);\r\n  };\r\n\r\n  const formatDateTime = (dateStr) => {\r\n    const date = new Date(dateStr);\r\n    if (isNaN(date.getTime())) {\r\n      return \"\"; \r\n    }\r\n    const options = { day: 'numeric', month: 'short', year: 'numeric' };\r\n    const formattedDate = new Intl.DateTimeFormat('en-GB', options).format(date);\r\n    const hours = date.getHours().toString().padStart(2, '0');\r\n    const minutes = date.getMinutes().toString().padStart(2, '0');\r\n    const formattedTime = `${hours}:${minutes}`;\r\n    return `${formattedDate} • ${formattedTime}`;\r\n  };\r\n\r\n  const shareNote = (note) => {\r\n    const shareData = {\r\n      title: 'Note',\r\n      text: note.content,\r\n      url: window.location.href // optional, depending on your sharing method\r\n    };\r\n    navigator.share(shareData).catch(console.error);\r\n  };\r\n\r\n  const shareGroup = () => {\r\n    const notesContent = notes.map(note => note.content).join('\\n\\n');\r\n    const shareData = {\r\n      title: 'Notes Group',\r\n      text: notesContent,\r\n      url: window.location.href \r\n    };\r\n    navigator.share(shareData).catch(console.error);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"note-view-container\"\r\n      style={{ display: isMobile && !display ? \"none\" : \"\" }}\r\n    >\r\n      <NoteHeader\r\n        name={name}\r\n        color={color}\r\n        isMobile={isMobile}\r\n        display={display}\r\n        setDisplay={setDisplay}\r\n      />\r\n      <button onClick={shareGroup}>Share Group</button>\r\n      {groupId === id &&\r\n        notes &&\r\n        notes.map((note, index) => (\r\n          <div className=\"note-box\" key={index}>\r\n            <div className=\"note-content\">{note.content}</div>\r\n            <div className=\"note-footer\">\r\n              <div className=\"note-date-time\">\r\n                <span className=\"note-date-time\">{formatDateTime(note.date)}</span>\r\n              </div>\r\n              <button onClick={() => shareNote(note)}>Share Note</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      {notes && notes.length <= 0 && (\r\n        <p className=\"example-txt\">Start Writing Notes Here!</p>\r\n      )}\r\n      <Input id={id} handleNewNote={handleNewNote} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteView;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}