{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import NoteView from\"./components/NoteView\";import Sidebar from\"./components/Sidebar\";import\"./styles/App.css\";import CreateNote from\"./components/CreateNote\";import Notes from\"./components/Notes\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[noteBtnClick,setNoteBtnClick]=useState(false);const[noteGroups,setNoteGroups]=useState(localStorage.getItem(\"noteGroups\")?JSON.parse(localStorage.getItem(\"noteGroups\")):[]);const[newNoteGroup,setNewNoteGroup]=useState({id:\"\",name:\"\",notes:[],color:\"\"});const[selectedNote,setSelectedNote]=useState({});const[isMobile,setIsMobile]=useState(false);const[display,setDisplay]=useState(false);useEffect(()=>{const handleResize=()=>{setIsMobile(window.innerWidth<768);};window.addEventListener(\"resize\",handleResize);handleResize();return()=>window.removeEventListener(\"resize\",handleResize);},[]);return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\" App flex flex-row\",children:[/*#__PURE__*/_jsx(Sidebar,{display:display,setDisplay:setDisplay,setNoteBtnClick:setNoteBtnClick,noteGroups:noteGroups,setSelectedNote:setSelectedNote,selectedNote:selectedNote,isMobile:isMobile}),/*#__PURE__*/_jsx(Notes,{display:display,setDisplay:setDisplay,selectedNote:selectedNote,isMobile:isMobile,noteBtnClick:noteBtnClick})]}),/*#__PURE__*/_jsx(CreateNote,{noteBtnClick:noteBtnClick,setNoteBtnClick:setNoteBtnClick,noteGroups:noteGroups,setNewNoteGroup:setNewNoteGroup,setNoteGroups:setNoteGroups})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","NoteView","Sidebar","CreateNote","Notes","jsx","_jsx","jsxs","_jsxs","App","noteBtnClick","setNoteBtnClick","noteGroups","setNoteGroups","localStorage","getItem","JSON","parse","newNoteGroup","setNewNoteGroup","id","name","notes","color","selectedNote","setSelectedNote","isMobile","setIsMobile","display","setDisplay","handleResize","window","innerWidth","addEventListener","removeEventListener","Fragment","children","className"],"sources":["D:/HTML Projects/NoteAppReact/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport NoteView from \"./components/NoteView\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport \"./styles/App.css\";\r\nimport CreateNote from \"./components/CreateNote\";\r\nimport Notes from \"./components/Notes\";\r\n\r\nfunction App() {\r\n  const [noteBtnClick, setNoteBtnClick] = useState(false);\r\n  const [noteGroups, setNoteGroups] = useState(\r\n    localStorage.getItem(\"noteGroups\")\r\n      ? JSON.parse(localStorage.getItem(\"noteGroups\"))\r\n      : []\r\n  );\r\n  const [newNoteGroup, setNewNoteGroup] = useState({\r\n    id: \"\",\r\n    name: \"\",\r\n    notes: [],\r\n    color: \"\",\r\n  });\r\n  const [selectedNote, setSelectedNote] = useState({});\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsMobile(window.innerWidth < 768);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n    handleResize();\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\" App flex flex-row\">\r\n        <Sidebar\r\n          display={display}\r\n          setDisplay={setDisplay}\r\n          setNoteBtnClick={setNoteBtnClick}\r\n          noteGroups={noteGroups}\r\n          setSelectedNote={setSelectedNote}\r\n          selectedNote={selectedNote}\r\n          isMobile={isMobile}\r\n        />\r\n\r\n      {/* View The Notes  */}\r\n  \r\n        <Notes\r\n          display={display}\r\n          setDisplay={setDisplay}\r\n          selectedNote={selectedNote}\r\n          isMobile={isMobile}\r\n          noteBtnClick={noteBtnClick}\r\n        />\r\n      </div>\r\n\r\n      {/* New Note Group */}\r\n\r\n      <CreateNote\r\n        noteBtnClick={noteBtnClick}\r\n        setNoteBtnClick={setNoteBtnClick}\r\n        noteGroups={noteGroups}\r\n        setNewNoteGroup={setNewNoteGroup}\r\n        setNoteGroups={setNoteGroups}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,OAAO,KAAM,sBAAsB,CAC1C,MAAO,kBAAkB,CACzB,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAACY,UAAU,CAAEC,aAAa,CAAC,CAAGb,QAAQ,CAC1Cc,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAC9BC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,CAC9C,EACN,CAAC,CACD,KAAM,CAACG,YAAY,CAAEC,eAAe,CAAC,CAAGnB,QAAQ,CAAC,CAC/CoB,EAAE,CAAE,EAAE,CACNC,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,KAAK,CAAE,EACT,CAAC,CAAC,CACF,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGzB,QAAQ,CAAC,CAAC,CAAC,CAAC,CACpD,KAAM,CAAC0B,QAAQ,CAAEC,WAAW,CAAC,CAAG3B,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAAC4B,OAAO,CAAEC,UAAU,CAAC,CAAG7B,QAAQ,CAAC,KAAK,CAAC,CAE7CD,SAAS,CAAC,IAAM,CACd,KAAM,CAAA+B,YAAY,CAAGA,CAAA,GAAM,CACzBH,WAAW,CAACI,MAAM,CAACC,UAAU,CAAG,GAAG,CAAC,CACtC,CAAC,CACDD,MAAM,CAACE,gBAAgB,CAAC,QAAQ,CAAEH,YAAY,CAAC,CAC/CA,YAAY,CAAC,CAAC,CACd,MAAO,IAAMC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,CAAEJ,YAAY,CAAC,CACjE,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEtB,KAAA,CAACV,KAAK,CAACqC,QAAQ,EAAAC,QAAA,eACb5B,KAAA,QAAK6B,SAAS,CAAC,oBAAoB,CAAAD,QAAA,eACjC9B,IAAA,CAACJ,OAAO,EACN0B,OAAO,CAAEA,OAAQ,CACjBC,UAAU,CAAEA,UAAW,CACvBlB,eAAe,CAAEA,eAAgB,CACjCC,UAAU,CAAEA,UAAW,CACvBa,eAAe,CAAEA,eAAgB,CACjCD,YAAY,CAAEA,YAAa,CAC3BE,QAAQ,CAAEA,QAAS,CACpB,CAAC,cAIFpB,IAAA,CAACF,KAAK,EACJwB,OAAO,CAAEA,OAAQ,CACjBC,UAAU,CAAEA,UAAW,CACvBL,YAAY,CAAEA,YAAa,CAC3BE,QAAQ,CAAEA,QAAS,CACnBhB,YAAY,CAAEA,YAAa,CAC5B,CAAC,EACC,CAAC,cAINJ,IAAA,CAACH,UAAU,EACTO,YAAY,CAAEA,YAAa,CAC3BC,eAAe,CAAEA,eAAgB,CACjCC,UAAU,CAAEA,UAAW,CACvBO,eAAe,CAAEA,eAAgB,CACjCN,aAAa,CAAEA,aAAc,CAC9B,CAAC,EACY,CAAC,CAErB,CAEA,cAAe,CAAAJ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}