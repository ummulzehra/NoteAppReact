{"ast":null,"code":"var _jsxFileName = \"D:\\\\HTML Projects\\\\NoteAppReact\\\\src\\\\components\\\\Sidebar.jsx\";\nimport React from \"react\";\nimport \"../styles/Sidebar.Module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  setNoteBtnClick,\n  noteGroups,\n  setSelectedNote,\n  selectedNote,\n  isMobile,\n  display,\n  setDisplay\n}) => {\n  const handleSelect = note => {\n    if (isMobile) {\n      setDisplay(true);\n    }\n    setSelectedNote(note);\n  };\n  const getInitials = name => {\n    const words = name.split(\" \");\n    if (words.length === 1) {\n      // Single word\n      return words[0].charAt(0).toUpperCase();\n    } else if (words.length >= 2) {\n      // Two or more words\n      return `${words[0].charAt(0).toUpperCase()}${words[1].charAt(0).toUpperCase()}`;\n    }\n    return \"\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `sidebar ${isMobile ? \"mob-sidebar\" : \"\"}`,\n    style: {\n      display: isMobile && display ? \"none\" : \"\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-heading\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sidebar-title\",\n        children: \"Sticky Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-notes-list flex justify-start\",\n      children: noteGroups && noteGroups.map((note, index) => {\n        const initials = getInitials(note.name);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `sidebar-note-element flex flex-row justify-start ${note.id === selectedNote.id ? \"note-selected\" : \"\"}`,\n          onClick: () => handleSelect(note),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle note-list-icon flex\",\n            style: {\n              marginRight: \"0.5rem\",\n              backgroundColor: note.color\n            },\n            children: initials\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"sidebar-note-title\",\n            children: note.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"create-notes flex flex-row\",\n      onClick: () => setNoteBtnClick(true),\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        style: {\n          marginRight: \"0.5rem\"\n        },\n        width: \"12\",\n        height: \"22\",\n        viewBox: \"0 0 21 22\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M20.1522 8.13587V12.4498H0.312071V8.13587H20.1522ZM12.5581 0.0248901V21.0975H7.92606V0.0248901H12.5581Z\",\n          fill: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Sidebar","setNoteBtnClick","noteGroups","setSelectedNote","selectedNote","isMobile","display","setDisplay","handleSelect","note","getInitials","name","words","split","length","charAt","toUpperCase","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","initials","id","onClick","marginRight","backgroundColor","color","width","height","viewBox","fill","xmlns","d","_c","$RefreshReg$"],"sources":["D:/HTML Projects/NoteAppReact/src/components/Sidebar.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"../styles/Sidebar.Module.css\";\r\n\r\nconst Sidebar = ({\r\n  setNoteBtnClick,\r\n  noteGroups,\r\n  setSelectedNote,\r\n  selectedNote,\r\n  isMobile,\r\n  display,\r\n  setDisplay,\r\n}) => {\r\n  const handleSelect = (note) => {\r\n    if (isMobile) {\r\n      setDisplay(true);\r\n    }\r\n    setSelectedNote(note);\r\n  };\r\n\r\n  const getInitials = (name) => {\r\n    const words = name.split(\" \");\r\n    if (words.length === 1) {\r\n      // Single word\r\n      return words[0].charAt(0).toUpperCase();\r\n    } else if (words.length >= 2) {\r\n      // Two or more words\r\n      return `${words[0].charAt(0).toUpperCase()}${words[1].charAt(0).toUpperCase()}`;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`sidebar ${isMobile ? \"mob-sidebar\" : \"\"}`}\r\n      style={{ display: isMobile && display ? \"none\" : \"\" }}\r\n    >\r\n      <div className=\"sidebar-heading\">\r\n        <p className=\"sidebar-title\">Sticky Notes</p>\r\n      </div>\r\n      <div className=\"sidebar-notes-list flex justify-start\">\r\n        {noteGroups &&\r\n          noteGroups.map((note, index) => {\r\n            const initials = getInitials(note.name);\r\n\r\n            return (\r\n              <div\r\n                className={`sidebar-note-element flex flex-row justify-start ${\r\n                  note.id === selectedNote.id ? \"note-selected\" : \"\"\r\n                }`}\r\n                key={index}\r\n                onClick={() => handleSelect(note)}\r\n              >\r\n                <div\r\n                  className=\"circle note-list-icon flex\"\r\n                  style={{ marginRight: \"0.5rem\", backgroundColor: note.color }}\r\n                >\r\n                  {initials}\r\n                </div>\r\n                <p className=\"sidebar-note-title\">{note.name}</p>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n      <button\r\n        className=\"create-notes flex flex-row\"\r\n        onClick={() => setNoteBtnClick(true)}\r\n      >\r\n        <svg\r\n          style={{ marginRight: \"0.5rem\" }}\r\n          width=\"12\"\r\n          height=\"22\"\r\n          viewBox=\"0 0 21 22\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M20.1522 8.13587V12.4498H0.312071V8.13587H20.1522ZM12.5581 0.0248901V21.0975H7.92606V0.0248901H12.5581Z\"\r\n            fill=\"white\"\r\n          />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}