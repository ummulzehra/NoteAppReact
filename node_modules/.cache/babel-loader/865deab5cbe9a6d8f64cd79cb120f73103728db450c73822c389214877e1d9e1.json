{"ast":null,"code":"var _jsxFileName = \"D:\\\\HTML Projects\\\\NoteAppReact\\\\src\\\\components\\\\NoteView.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"../styles/NoteView.Module.css\";\nimport NoteHeader from \"./NoteHeader\";\nimport Input from \"./Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteView = _ref => {\n  _s();\n  let {\n    name,\n    color,\n    id,\n    isMobile,\n    display,\n    setDisplay\n  } = _ref;\n  const [notes, setNotes] = React.useState([]);\n  const [groupId, setGroupId] = React.useState(\"\");\n  const [newNote, setNewNote] = React.useState({});\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\n  React.useEffect(() => {\n    const noteGroups = JSON.parse(localStorage.getItem(\"noteGroups\"));\n    const groupIndex = noteGroups.findIndex(group => group.id === id);\n    if (groupIndex === -1) {\n      console.error(`Group with ID ${id} not found`);\n      return;\n    }\n    const group = noteGroups[groupIndex];\n    setGroupId(group.id);\n    setNotes(group.notes || []);\n  }, [id, newNote]);\n  const handleNewNote = value => {\n    setNewNote(value);\n    setNotes([...notes, value]);\n  };\n\n  // Function to format the date\n  const formatDate = dateStr => {\n    const options = {\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric'\n    };\n    const date = new Date(dateStr);\n    return new Intl.DateTimeFormat('en-GB', options).format(date);\n  };\n\n  // Share individual note\n  const shareNote = note => {\n    const shareData = {\n      title: 'Note',\n      text: note.content,\n      url: window.location.href\n    };\n    if (navigator.share) {\n      navigator.share(shareData).catch(console.error);\n    } else {\n      console.log(\"Share API not supported\");\n    }\n  };\n\n  // Share entire group of notes\n  const shareGroup = () => {\n    const notesContent = notes.map(note => note.content).join('\\n\\n');\n    const shareData = {\n      title: 'Notes Group',\n      text: notesContent,\n      url: window.location.href\n    };\n    if (navigator.share) {\n      navigator.share(shareData).catch(console.error);\n    } else {\n      console.log(\"Share API not supported\");\n    }\n  };\n\n  // Export notes as a text file\n  const exportNotesAsFile = () => {\n    const notesContent = notes.map(note => note.content).join('\\n\\n');\n    const blob = new Blob([notesContent], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'notes.txt';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  // Filter notes based on search query\n  const filteredNotes = notes.filter(note => note.content.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note-view-container\",\n    style: {\n      display: isMobile && !display ? \"none\" : \"\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(NoteHeader, {\n      name: name,\n      color: color,\n      isMobile: isMobile,\n      display: display,\n      setDisplay: setDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search notes...\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shareGroup,\n      className: \"share-group-button\",\n      children: \"Share Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: exportNotesAsFile,\n      className: \"export-group-button\",\n      children: \"Export Group as File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-list\",\n      children: [groupId === id && filteredNotes.length > 0 && filteredNotes.map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-content\",\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"note-date-time\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"note-date\",\n              children: formatDate(note.date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bullet\",\n              children: \"\\u2022\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"note-time\",\n              children: note.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => shareNote(note),\n            className: \"share-note-button\",\n            children: \"Share Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)), groupId === id && filteredNotes.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"example-txt\",\n        children: \"No notes found matching your search!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), notes.length <= 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"example-txt\",\n        children: \"Start Writing Notes Here!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: id,\n      handleNewNote: handleNewNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteView, \"K69ZONUehgEQkULAeYtPRU5DEg0=\");\n_c = NoteView;\nexport default NoteView;\nvar _c;\n$RefreshReg$(_c, \"NoteView\");","map":{"version":3,"names":["React","NoteHeader","Input","jsxDEV","_jsxDEV","NoteView","_ref","_s","name","color","id","isMobile","display","setDisplay","notes","setNotes","useState","groupId","setGroupId","newNote","setNewNote","searchQuery","setSearchQuery","useEffect","noteGroups","JSON","parse","localStorage","getItem","groupIndex","findIndex","group","console","error","handleNewNote","value","formatDate","dateStr","options","day","month","year","date","Date","Intl","DateTimeFormat","format","shareNote","note","shareData","title","text","content","url","window","location","href","navigator","share","catch","log","shareGroup","notesContent","map","join","exportNotesAsFile","blob","Blob","type","URL","createObjectURL","a","document","createElement","download","click","revokeObjectURL","filteredNotes","filter","toLowerCase","includes","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","onClick","length","index","time","_c","$RefreshReg$"],"sources":["D:/HTML Projects/NoteAppReact/src/components/NoteView.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"../styles/NoteView.Module.css\";\r\nimport NoteHeader from \"./NoteHeader\";\r\nimport Input from \"./Input\";\r\n\r\nconst NoteView = ({ name, color, id, isMobile, display, setDisplay }) => {\r\n  const [notes, setNotes] = React.useState([]);\r\n  const [groupId, setGroupId] = React.useState(\"\");\r\n  const [newNote, setNewNote] = React.useState({});\r\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    const noteGroups = JSON.parse(localStorage.getItem(\"noteGroups\"));\r\n    const groupIndex = noteGroups.findIndex((group) => group.id === id);\r\n    if (groupIndex === -1) {\r\n      console.error(`Group with ID ${id} not found`);\r\n      return;\r\n    }\r\n    const group = noteGroups[groupIndex];\r\n    setGroupId(group.id);\r\n    setNotes(group.notes || []);\r\n  }, [id, newNote]);\r\n\r\n  const handleNewNote = (value) => {\r\n    setNewNote(value);\r\n    setNotes([...notes, value]);\r\n  };\r\n\r\n  // Function to format the date\r\n  const formatDate = (dateStr) => {\r\n    const options = { day: 'numeric', month: 'short', year: 'numeric' };\r\n    const date = new Date(dateStr);\r\n    return new Intl.DateTimeFormat('en-GB', options).format(date);\r\n  };\r\n\r\n  // Share individual note\r\n  const shareNote = (note) => {\r\n    const shareData = {\r\n      title: 'Note',\r\n      text: note.content,\r\n      url: window.location.href\r\n    };\r\n    if (navigator.share) {\r\n      navigator.share(shareData).catch(console.error);\r\n    } else {\r\n      console.log(\"Share API not supported\");\r\n    }\r\n  };\r\n\r\n  // Share entire group of notes\r\n  const shareGroup = () => {\r\n    const notesContent = notes.map(note => note.content).join('\\n\\n');\r\n    const shareData = {\r\n      title: 'Notes Group',\r\n      text: notesContent,\r\n      url: window.location.href\r\n    };\r\n    if (navigator.share) {\r\n      navigator.share(shareData).catch(console.error);\r\n    } else {\r\n      console.log(\"Share API not supported\");\r\n    }\r\n  };\r\n\r\n  // Export notes as a text file\r\n  const exportNotesAsFile = () => {\r\n    const notesContent = notes.map(note => note.content).join('\\n\\n');\r\n    const blob = new Blob([notesContent], { type: 'text/plain' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'notes.txt';\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  // Filter notes based on search query\r\n  const filteredNotes = notes.filter(note =>\r\n    note.content.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className=\"note-view-container\"\r\n      style={{ display: isMobile && !display ? \"none\" : \"\" }}\r\n    >\r\n      <NoteHeader\r\n        name={name}\r\n        color={color}\r\n        isMobile={isMobile}\r\n        display={display}\r\n        setDisplay={setDisplay}\r\n      />\r\n      <div className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search notes...\"\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n          className=\"search-input\"\r\n        />\r\n      </div>\r\n      <button onClick={shareGroup} className=\"share-group-button\">Share Group</button>\r\n      <button onClick={exportNotesAsFile} className=\"export-group-button\">Export Group as File</button>\r\n      <div className=\"notes-list\">\r\n        {groupId === id &&\r\n          filteredNotes.length > 0 &&\r\n          filteredNotes.map((note, index) => (\r\n            <div className=\"note-box\" key={index}>\r\n              <div className=\"note-content\">{note.content}</div>\r\n              <div className=\"note-footer\">\r\n                <div className=\"note-date-time\">\r\n                  <span className=\"note-date\">{formatDate(note.date)}</span>\r\n                  <span className=\"bullet\">•</span>\r\n                  <span className=\"note-time\">{note.time}</span>\r\n                </div>\r\n                <button onClick={() => shareNote(note)} className=\"share-note-button\">Share Note</button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        {groupId === id && filteredNotes.length === 0 && (\r\n          <p className=\"example-txt\">No notes found matching your search!</p>\r\n        )}\r\n        {notes.length <= 0 && (\r\n          <p className=\"example-txt\">Start Writing Notes Here!</p>\r\n        )}\r\n      </div>\r\n      <Input id={id} handleNewNote={handleNewNote} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteView;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}